Version 4
SHEET 1 880 680
WIRE 176 64 96 64
WIRE 176 208 96 208
WIRE -544 288 -624 288
WIRE -336 288 -432 288
WIRE -32 288 -32 224
WIRE -624 320 -624 288
WIRE -432 320 -432 288
WIRE 176 336 96 336
FLAG 176 64 D0
IOPIN 176 64 Out
FLAG 176 208 D1
IOPIN 176 208 Out
FLAG 176 336 D2
IOPIN 176 336 Out
FLAG -32 288 ADDRESS
IOPIN -32 288 In
FLAG 96 144 0
FLAG 96 288 0
FLAG 96 416 0
FLAG -624 400 0
FLAG -544 288 _1
FLAG -432 400 0
FLAG -336 288 1
SYMBOL bv 96 48 R0
SYMATTR InstName B1
SYMATTR Value V=choose(V(0),V(_1),V(1))
SYMBOL bv 96 192 R0
SYMATTR InstName B2
SYMATTR Value V=choose(V(_1),V(_1),V(_1))
SYMBOL bv 96 320 R0
SYMATTR InstName B3
SYMATTR Value V=choose(V(0),V(1),V(0))
SYMBOL bv -624 304 R0
SYMATTR InstName B4
SYMATTR Value V=V($G_Vss)
SYMBOL bv -432 304 R0
SYMATTR InstName B5
SYMATTR Value V=V($G_Vdd)
TEXT -560 56 Left 0 !; Threshold voltages\n.param V_N_max=-2\n.param V_P_min=2
TEXT -560 -32 Left 0 !; Select a voltage value based on the logic input at ADDRESS\n.func choose(for_n,for_z,for_p) {if(v(ADDRESS)<={V_N_max},for_n,if(v(ADDRESS)>={V_P_min},for_p,for_z))}
TEXT -776 256 Left 0 ;Shortcuts so you can type V(_1) for logic -1 instead of V($G_Vss), etc.
TEXT 400 296 Left 0 ;guess.t assembled\n(read down, then across)
